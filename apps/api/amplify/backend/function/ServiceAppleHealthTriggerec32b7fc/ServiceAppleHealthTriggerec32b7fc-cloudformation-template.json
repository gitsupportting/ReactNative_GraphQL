{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Lambda resource stack creation using Amplify CLI",
    "Parameters": {
        "env": {
            "Type": "String"
        },
        "storageServiceAppleHealthName": {
            "Type": "String",
            "Default": "storageServiceAppleHealthName"
        },
        "storageServiceAppleHealthArn": {
            "Type": "String",
            "Default": "storageServiceAppleHealthArn"
        },
        "storageServiceAppleHealthStreamArn": {
            "Type": "String",
            "Default": "storageServiceAppleHealthArn"
        },
        "storageLedgerName": {
            "Type": "String"
        }
    },
    "Conditions": {
        "ShouldNotCreateEnvResources": {
            "Fn::Equals": [
                {
                    "Ref": "env"
                },
                "NONE"
            ]
        }
    },
    "Resources": {
        "LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "aws:asset:path": "./src",
                "aws:asset:property": "Code"
            },
            "Properties": {
                "Handler": "index.handler",
                "FunctionName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        "ServiceAppleHealthTriggerec32b7fc",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    "ServiceAppleHealthTriggerec32b7fc",
                                    "-",
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "Environment": {
                    "Variables": {
                        "ENV": {
                            "Ref": "env"
                        },
                        "LEDGER": {
                            "Ref": "storageLedgerName"
                        }
                    }
                },
                "Role": {
                    "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]
                },
                "Runtime": "nodejs12.x",
                "Timeout": "25",
                "Code": {
                    "S3Bucket": "amplify-koraapi-prod-181759-deployment",
                    "S3Key": "amplify-builds/ServiceAppleHealthTriggerec32b7fc-56335967465a72727058-build.zip"
                }
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        "ServiceAppleHealthLambdaRoleec32b7fc",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    "ServiceAppleHealthLambdaRoleec32b7fc",
                                    "-",
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": ["lambda.amazonaws.com"]
                            },
                            "Action": ["sts:AssumeRole"]
                        }
                    ]
                }
            }
        },
        "lambdaexecutionpolicy": {
            "DependsOn": ["LambdaExecutionRole"],
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "lambda-execution-policy",
                "Roles": [
                    {
                        "Ref": "LambdaExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"],
                            "Resource": {
                                "Fn::Sub": [
                                    "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*",
                                    {
                                        "region": {
                                            "Ref": "AWS::Region"
                                        },
                                        "account": {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "lambda": {
                                            "Ref": "LambdaFunction"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "ServiceAppleHealthTriggerPolicy": {
            "DependsOn": ["LambdaExecutionRole"],
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "lambda-trigger-policy",
                "Roles": [
                    {
                        "Ref": "LambdaExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:DescribeStream",
                                "dynamodb:GetRecords",
                                "dynamodb:GetShardIterator",
                                "dynamodb:ListStreams"
                            ],
                            "Resource": [
                                {
                                    "Ref": "storageServiceAppleHealthStreamArn"
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": ["qldb:SendCommand"],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:qldb:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":ledger/",
                                            {
                                                "Ref": "storageLedgerName"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "ServiceAppleHealthTrigger": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": ["ServiceAppleHealthTriggerPolicy"],
            "Properties": {
                "BatchSize": 100,
                "Enabled": true,
                "EventSourceArn": {
                    "Ref": "storageServiceAppleHealthStreamArn"
                },
                "FunctionName": {
                    "Fn::GetAtt": ["LambdaFunction", "Arn"]
                },
                "StartingPosition": "LATEST"
            }
        }
    },
    "Outputs": {
        "Name": {
            "Value": {
                "Ref": "LambdaFunction"
            }
        },
        "Arn": {
            "Value": {
                "Fn::GetAtt": ["LambdaFunction", "Arn"]
            }
        },
        "Region": {
            "Value": {
                "Ref": "AWS::Region"
            }
        },
        "LambdaExecutionRole": {
            "Value": {
                "Ref": "LambdaExecutionRole"
            }
        }
    }
}
